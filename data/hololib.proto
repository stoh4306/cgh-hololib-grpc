// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";
//option objc_class_prefix = "HLW";

package hololibgrpc;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}

  rpc ComputeHologram (HologramRequest) returns (stream HologramReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message HologramRequest {
  uint32 meshDataSize       = 1;
  bytes meshData            = 2;
  uint32 textureDataSize    = 3;
  bytes textureData         = 4;
  
  string shadingOption      = 5;
  string textureOption      = 6;
  string wavelengthOption   = 7;
  string pixelSizeOption    = 8;
  string numOfPixelsOption  = 9;
  string initialPhaseOption = 10;
}

message HologramReply {
  uint32 hologramDataSize = 1;
  bytes hologramData = 2;
  uint32 ReconstDataSize = 3;
  bytes ReconstData = 4;
  uint32 duration = 5;
}
